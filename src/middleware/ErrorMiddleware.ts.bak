import { ArgumentValidationError, MiddlewareInterface, NextFn, ResolverData } from '@nestjs/graphql';
import { Service } from 'typedi';

import { BaseContext, logger } from '../core';

@Service()
export class ErrorLoggerMiddleware implements MiddlewareInterface<BaseContext> {
  constructor() {}

  async use({ context }: ResolverData<BaseContext>, next: NextFn) {
    try {
      return await next();
    } catch (err) {
      if (!(err instanceof ArgumentValidationError)) {
        // hide errors from db like printing sql query
        logger.error(context.user);
        throw new Error('Unknown error occurred. Try again later!');
      }
      throw err;
    }
  }
}
